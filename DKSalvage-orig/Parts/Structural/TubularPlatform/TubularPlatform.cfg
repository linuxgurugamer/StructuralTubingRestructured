PART
{
	name = TubularPlatform
	module = Part
	author = DrunkenKerbalnaut
	mesh = model.mu
	rescaleFactor = 1

	//TOP AND BOTTOM NODES - the ones in the middle of the platform
	node_stack_top = 0, 0.0275, 0, 0, 1, 0, 0
	node_stack_bottom = 0,-0.0275, 0, 0, -1, 0, 0

	//FORE AND AFT NODES - the ones on the short sides
	node_stack_connect01 = 0, 0, 0.5, 0, 0, 1, 0
	node_stack_connect02 = 0, 0, -0.5, 0, 0, -1, 0

	//LEFT AND RIGHT NODES - the ones on the long sides
	node_stack_connect03 = 0.3125, 0, 0, 1, 0, 0, 0
	node_stack_connect04 = -0.3125, 0, 0, -1, 0, 0, 0

	//this allows symmetry between the left and right nodes.
	//disable this if you are having issues with symmetry.
	//strange behavior from the fore and aft nodes has been
	//experienced when in airplane-style symmetry mode.
	//just comment it out with the two forward slashes.
	stackSymmetry = 1

	attachRules = 1,1,1,1,1

	TechRequired = specializedConstruction
	entryCost = 4000
	cost = 85
	category = Structural
	subcategory = 0
	title = Tubular Platform, 0.625x1m
	manufacturer = DK Salvage
	description = We found a bundle of this mesh stuff when we ripped down Franks chicken coops, so we figured we'd make something nifty for you. Should make for a good rover base, or... a chicken coop. The Circle of Life! [issues with symetry mode? See the .cfg file, look for "stackSymmetry"]

	mass = 0.06
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 80
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2000 // = 3200
	fuelCrossFeed = False
	bulkheadProfiles = size0, srf
	tags = connect frame scaffold structur strut truss DK Salvage tube pipe roll cage platform mesh expanded metal flat rover base

		MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}

	
				MODULE
	{
		 name = FStextureSwitch2
		moduleID = 0
		// textureRootFolder = ***/***/***/
		objectNames = Frame 
			//"Plat" is the inset part, should that ever be important
		textureNames = DKSalvage/Parts/FStextureSwitch2Textures/Camo1;DKSalvage/Parts/FStextureSwitch2Textures/Camo2;DKSalvage/Parts/FStextureSwitch2Textures/green1;DKSalvage/Parts/FStextureSwitch2Textures/Hot1;DKSalvage/Parts/FStextureSwitch2Textures/grey;DKSalvage/Parts/FStextureSwitch2Textures/Texture;DKSalvage/Parts/FStextureSwitch2Textures/HiVis;DKSalvage/Parts/FStextureSwitch2Textures/KonstructorYellow;DKSalvage/Parts/FStextureSwitch2Textures/Orange;DKSalvage/Parts/FStextureSwitch2Textures/RacingRed;DKSalvage/Parts/FStextureSwitch2Textures/Sandstorm
		textureDisplayNames = CamoNature;UrbanCamo;green;Hot1;Stockalike;DKSalvage;HighVisibility;USI;Search&Rescue;RacecarRed;Sandstorm
		nextButtonText = Next Color
		prevButtonText = Previous Color
		statusText = Current Color
		showPreviousButton = true
		updateSymmetry = true
		showInfo = false
		debugMode = false
		// show or hide the List Objects button. Disabled by default. Should only be on while developing the part. Outputs a list of gameObjects in the part to the Alt+F2 log
		showListButton = false
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = False
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 500
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 1000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 250
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 500
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 500
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 85000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 150000
			situationMask = 32
			body = _NotSun
		}
	}
}